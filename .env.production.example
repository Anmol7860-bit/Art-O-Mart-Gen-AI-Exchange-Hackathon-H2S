# Production Environment Variables Template
# Copy this file to .env.production and configure with your production values

# =============================================================================
# REQUIRED: SUPABASE CONFIGURATION
# =============================================================================
# Get these values from https://app.supabase.com > Your Project > Settings > API

# Your Supabase project URL (replace 'your-project-id' with your actual project ID)
VITE_SUPABASE_URL=https://your-project-id.supabase.co

# Your Supabase anon/public key (this is safe to expose in frontend)
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key-here

# =============================================================================
# REQUIRED: BACKEND CONFIGURATION
# =============================================================================
# Your production backend WebSocket URL (secure protocol required for production)

# For Heroku: wss://your-app-name.herokuapp.com
# For Railway: wss://your-app-name.up.railway.app
# For Render: wss://your-app-name.onrender.com
# For AWS/Custom: wss://api.yourdomain.com
VITE_WS_URL=wss://your-backend-domain.com

# Optional: Backend API URL (if different from WebSocket URL)
# If not set, will automatically derive from VITE_WS_URL
# VITE_BACKEND_URL=https://your-backend-domain.com/api

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application metadata
VITE_APP_NAME=Art-O-Mart
VITE_APP_VERSION=1.0.0

# Feature flags - set to 'true' to enable features in production
VITE_ENABLE_AI_FEATURES=true
VITE_ENABLE_WEBSOCKETS=true
VITE_ENABLE_ANALYTICS=true

# Production optimization settings
VITE_DEBUG_MODE=false
VITE_MOCK_DATA=false

# =============================================================================
# DEPLOYMENT PLATFORM SPECIFIC INSTRUCTIONS
# =============================================================================

# VERCEL DEPLOYMENT:
# 1. Add these environment variables in Vercel dashboard > Settings > Environment Variables
# 2. Set environment to "Production" 
# 3. Make sure to redeploy after adding variables

# NETLIFY DEPLOYMENT:
# 1. Add these in Netlify dashboard > Site Settings > Environment Variables
# 2. Or create netlify.toml with [build.environment] section
# 3. Trigger new deploy after configuration

# AWS S3 + CLOUDFRONT:
# 1. Use AWS Systems Manager Parameter Store for secure storage
# 2. Configure build pipeline to inject variables during build
# 3. Set up CloudFront to serve the built static files

# =============================================================================
# ANALYTICS CONFIGURATION (Optional)
# =============================================================================
# Uncomment and configure if you're using analytics services

# Google Analytics
# VITE_GA_TRACKING_ID=G-XXXXXXXXXX

# PostHog Analytics
# VITE_POSTHOG_KEY=phc_xxxxxxxxxxxxxx
# VITE_POSTHOG_HOST=https://app.posthog.com

# Mixpanel Analytics
# VITE_MIXPANEL_TOKEN=xxxxxxxxxxxxxx

# =============================================================================
# SECURITY HEADERS (Platform Dependent)
# =============================================================================
# These are typically configured at the platform level, not as env vars
# But documented here for reference:

# Content Security Policy
# X-Frame-Options: DENY
# X-Content-Type-Options: nosniff
# Referrer-Policy: strict-origin-when-cross-origin
# Permissions-Policy: camera=(), microphone=(), geolocation=()

# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# ✅ All VITE_SUPABASE_* variables are configured with production Supabase project
# ✅ VITE_WS_URL points to production backend with wss:// protocol
# ✅ VITE_DEBUG_MODE=false and VITE_MOCK_DATA=false
# ✅ Backend CORS is configured to allow your production domain
# ✅ SSL certificates are properly configured for your backend
# ✅ Environment variables are properly set in your deployment platform
# ✅ Test the deployment with npm run build && npm run preview